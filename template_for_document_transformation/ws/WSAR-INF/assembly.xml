<?xml version="1.0" encoding="UTF-8"?>
<beans
     xmlns="http://www.springframework.org/schema/beans"
     xmlns:beans="http://www.springframework.org/schema/beans"
     xmlns:atom="http://www.w3.org/2005/Atom"
     xmlns:cc="http://www.capeclear.com/assembly/10"
     xmlns:cloud="urn:com.workday/esb/cloud/10.0"
     xmlns:env="http://schemas.xmlsoap.org/soap/envelope/"
     xmlns:pi="urn:com.workday/picof"
     xmlns:wd="urn:com.workday/bsvc"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 
	<cc:assembly id="WorkdayAssembly" version="2019.35">
        <cc:route id="process_documents">
            <cc:doc-iterator/>
            <cc:sub-route name="transform_file" routes-to="convert_transform"/>
        </cc:route>
        <cc:local-out id="GetEventDocuments" routes-response-to="process_documents" endpoint="vm://wcc/GetEventDocuments">
            <cc:set name="ie.event.wid" value="lp.isSet() ? lp.getIntegrationEventWID() : null"/>
        </cc:local-out>
        <cc:async-mediation id="convert_transform" routes-to="call_store_msg_for_output_file" execute-steps-when="vars['wd.retrieve.variable'].fileName.contains('.csv')||vars['wd.retrieve.variable'].fileName.contains('.txt')">
            <cc:steps>
                <cc:csv-to-xml id="make_xml" output="message" input="variable" input-variable="wd.retrieve.variable" rootName="inputFile" rowName="record" separator="," useFirstLineAsHeader="false"/>
                <cc:xslt id="create_output" url="@{props['transformation.filename']}"/>
                <cc:xtt id="xtt_unum" output="variable" output-variable="output.data" message-property="xtt-messages"/>
            </cc:steps>
        </cc:async-mediation>
        <cc:async-mediation id="set-props-template" routes-to="GetEventDocuments">
            <cc:steps>
                <cc:eval id="set-props">
                    <cc:expression>props['transformation.filename'] = 'lib/document-transformation-template.xsl'</cc:expression>
                    <cc:expression>props['parent.integration.event.wid'] = lp.getSimpleData('Parent Integration Event WID')</cc:expression>
                </cc:eval>
            </cc:steps>
        </cc:async-mediation>
        <cc:workday-in id="transform_file" routes-to="set-props-template">
            <cc:integration-system name="template_for_doc_transformation">
        <cloud:param name="Parent Integration Event WID">
          <cloud:type>
            <cloud:simple-type>text</cloud:simple-type>
          </cloud:type>
          <cloud:launch-option>required</cloud:launch-option>
        </cloud:param>
      </cc:integration-system>
        </cc:workday-in>
        <cc:local-out id="send_file_to_wd" endpoint="vm://wcc/PutIntegrationMessage">
            <cc:set name="is.event.wid" value="props['parent.integration.event.wid']"/>
            <cc:set name="is.message.severity" value="'INFO'"/>
            <cc:set name="is.message.summary" value="'Output File Stored'"/>
            <cc:set name="is.document.variable.name" value="'upload.report'"/>
            <cc:set name="is.document.deliverable" value="props['document.deliver']"/>
            <cc:set name="is.document.delivery.services" value="props['document.delivery.services']"/>
        </cc:local-out>
        <cc:async-mediation id="store-file-output" routes-to="send_file_to_wd">
            <cc:steps>
                <cc:store id="store-file" output="variable" output-variable="upload.report" input="variable" input-variable="output.data" createDocumentReference="true" title="@{props['output.filename']}"/>
            </cc:steps>
        </cc:async-mediation>
        <cc:local-in id="store_msg_for_output_file" routes-to="store-file-output" access="public" tooltip="Sub Routine Used to Store 'output.data' variable to Workday and assign the correct delivery tags/services." use-global-error-handlers="false">
            <cc:parameter default="'noOutputFilenameProvided.xml'" name="output.filename" required="true"/>
            <cc:parameter default="'false'" name="document.deliver" required="false"/>
            <cc:parameter default="''" name="document.delivery.services" required="false"/>
        </cc:local-in>
        <cc:local-out id="call_store_msg_for_output_file" execute-when="vars['wd.retrieve.variable'].fileName.contains('.csv')||vars['wd.retrieve.variable'].fileName.contains('.txt')" endpoint="vm://template_for_doc_transformation/store_msg_for_output_file">
            <cc:set name="output.filename" value="vars['wd.retrieve.variable'].fileName"/>
        </cc:local-out>
	</cc:assembly>

</beans>