<?xml version="1.0" encoding="UTF-8"?>
<beans
     xmlns="http://www.springframework.org/schema/beans"
     xmlns:beans="http://www.springframework.org/schema/beans"
     xmlns:atom="http://www.w3.org/2005/Atom"
     xmlns:cc="http://www.capeclear.com/assembly/10"
     xmlns:cloud="urn:com.workday/esb/cloud/10.0"
     xmlns:env="http://schemas.xmlsoap.org/soap/envelope/"
     xmlns:pi="urn:com.workday/picof"
     xmlns:wd="urn:com.workday/bsvc"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <cc:assembly id="WorkdayAssembly" version="2020.36">
        <cc:local-out id="call_get_request_endpoint" store-message="none" routes-response-to="call_parse_and_store_logging_info" endpoint="vm://@{props['web.service.get.request.endpoint']}">
            <cc:set name="report.extra.path" value="props['report.extra.path'] + props['report.filter']"/>
            <cc:set name="web.service.version" value="props['web.service.version']"/>
            <cc:set name="retrieval.labels" value="props['retrieval.file.labels']"/>
            <cc:set name="web.service.get.response.endpoint" value="props['web.service.get.response.endpoint']"/>
            <cc:set name="web.service.request.log" value="props['web.service.request.log']"/>
            <cc:set name="web.service.get.application" value="props['web.service.get.application']"/>
            <cc:set name="convert.ToXML" value="props['web.service.get.convert.to.xml']"/>
            <cc:set name="convert.ToXML.delimiter" value="props['web.service.get.convert.to.xml.delimiter']"/>
            <cc:set name="convert.ToXML.filename" value="props['web.service.get.convert.to.xml.filename']"/>
            <cc:set name="web.service.get.conform.xml" value="props['web.service.get.conform.xml']"/>
            <cc:set name="web.service.get.conform.xml.filename" value="props['web.service.get.conform.xml.filename']"/>
            <cc:set name="web.service.get.conform.xml.endpoint" value="props['web.service.get.conform.xml.endpoint']"/>
            <cc:set name="web.service.get.create.ws.xml.filename" value="props['web.service.get.create.ws.xml.filename']"/>
            <cc:set name="web.service.get.create.ws.xml.endpoint" value="props['web.service.get.create.ws.xml.endpoint']"/>
            <cc:set name="set.authentication.token" value="props['web.service.put.external.api.set.authorization.token']"/>
            <cc:set name="set.authentication.token.subroutine" value="props['web.service.put.external.api.set.authorization.token.subroutine']"/>
            <cc:set name="set.headers" value="props['web.service.put.external.api.set.headers']"/>
            <cc:set name="set.headers.subroutine" value="props['web.service.put.external.api.set.headers.subroutine']"/>
            <cc:set name="set.url.extrapath" value="props['web.service.put.external.api.set.url.extrapath']"/>
            <cc:set name="set.url.extrapath.subroutine" value="props['web.service.put.external.api.set.url.extrapath.subroutine']"/>
            <cc:set name="web.service.get.lookup.wd.data" value="props['web.service.get.lookup.wd.data']"/>
            <cc:set name="web.service.get.lookup.wd.data.application" value="props['web.service.get.lookup.wd.data.application']"/>
            <cc:set name="web.service.get.lookup.wd.data.filename" value="props['web.service.get.lookup.wd.data.filename']"/>
            <cc:set name="web.service.get.lookup.wd.data.subroutine" value="props['web.service.get.lookup.wd.data.subroutine']"/>
            <cc:set name="web.service.get.lookup.wd.data.request.type" value="props['web.service.get.lookup.wd.data.request.type']"/>
        </cc:local-out>
        <cc:async-mediation id="get_set_properties" routes-to="set-process-properties">
            <cc:steps>
                <cc:eval id="setup-counters">
                    <cc:expression>props['record.counter'] = 0</cc:expression>
                    <cc:expression>props['record.counter.failed'] = 0</cc:expression>
                    <cc:expression>props['record.counter.imported'] = 0</cc:expression>
                    <cc:expression>props['record.counter.skipped'] = 0</cc:expression>
                    <cc:expression>props['file.number.total'] = -1</cc:expression>
                    <cc:expression>props['page.total'] = -1</cc:expression>
                    <cc:expression>props['page.current'] = 0</cc:expression>
                    <cc:expression>vars['tempfailedoutput.xml']='&lt;blankxml/>'</cc:expression>
                </cc:eval>
            </cc:steps>
        </cc:async-mediation>
        <cc:local-out id="put_running_proc_msg" routes-response-to="call_set-props-attributes" endpoint="vm://wcc/PutIntegrationMessage">
            <cc:set name="is.message.severity" value="'INFO'"/>
            <cc:set name="is.message.summary" value="'Currently Executing: ' + props['running.process']"/>
            <cc:set name="is.message.storage.enabled" value="false"/>
        </cc:local-out>
        <cc:local-in id="set_processing_properties" routes-to="validate_config_file" access="public" icon="local-in-set_processing_properties.png">
            <cc:parameter name="running.process" required="true"/>
            <cc:parameter default="'false'" name="set.get.worker.properties" required="false"/>
        </cc:local-in>
        <cc:local-out id="call_process_xml_data" store-message="none" routes-response-to="call_aggregateprocessingdetails" endpoint="vm://@{props['web.service.put.request.endpoint']}">
            <cc:set name="web.service.put.create.ws.xml.filename" value="props['web.service.put.create.ws.xml.filename']"/>
            <cc:set name="web.service.put.create.ws.xml.endpoint" value="props['web.service.put.create.ws.xml.subroutine']"/>
            <cc:set name="update.data" value="props['update.data']"/>
            <cc:set name="web.service.put.application" value="props['web.service.put.application']"/>
            <cc:set name="web.service.version" value="props['web.service.version']"/>
            <cc:set name="multi.instance.update.1.wids" value="props['multi.instance.update.1.wids']"/>
            <cc:set name="multi.instance.update.2.wids" value="props['multi.instance.update.2.wids']"/>
            <cc:set name="multi.instance.update.3.wids" value="props['multi.instance.update.3.wids']"/>
            <cc:set name="single.instance.update.1.wids" value="props['single.instance.update.1.wids']"/>
            <cc:set name="single.instance.update.2.wids" value="props['single.instance.update.2.wids']"/>
            <cc:set name="single.instance.update.3.wids" value="props['single.instance.update.3.wids']"/>
            <cc:set name="single.instance.update.1.name" value="props['single.instance.update.1.name']"/>
            <cc:set name="single.instance.update.2.name" value="props['single.instance.update.2.name']"/>
            <cc:set name="single.instance.update.3.name" value="props['single.instance.update.3.name']"/>
            <cc:set name="web.service.auto.complete" value="props['web.service.auto.complete']"/>
            <cc:set name="web.service.add.only" value="props['web.service.add.only']"/>
            <cc:set name="web.service.submit" value="props['web.service.submit']"/>
            <cc:set name="lookup.wd.data" value="props['web.service.put.lookup.wd.data']"/>
            <cc:set name="lookup.wd.data.subroutine" value="props['web.service.put.lookup.wd.data.subroutine']"/>
            <cc:set name="lookup.wd.data.filename" value="props['web.service.put.lookup.wd.data.filename']"/>
            <cc:set name="lookup.wd.data.request.type" value="props['web.service.put.lookup.wd.data.request.type']"/>
            <cc:set name="lookup.wd.data.application" value="props['web.service.put.lookup.wd.data.application']"/>
            <cc:set name="web.service.conform.xml.filename" value="props['web.service.put.conform.xml.filename']"/>
            <cc:set name="web.service.put.conform.xml" value="props['web.service.put.conform.xml']"/>
            <cc:set name="web.service.put.conform.xml.endpoint" value="props['web.service.put.conform.xml.endpoint']"/>
        </cc:local-out>
        <cc:splitter id="split_response" no-split-message-error="false">
            <cc:sub-route name="process_xml" routes-to="record-counters"/>
            <cc:xml-stream-splitter namespaces="@{props['xml.split.namespace']}" xpath="//@{props['xml.split.tag']}"/>
        </cc:splitter>
        <cc:local-in id="split_and_process_response" routes-to="file-counters" access="public" icon="local-in-split_and_process_response.png">
            <cc:parameter default="-1" name="page.current" required="true"/>
            <cc:parameter default="-1" name="page.total" required="true"/>
            <cc:parameter default="-1" name="record.count.total" required="true"/>
        </cc:local-in>
        <cc:async-mediation id="set-ws-props" routes-to="set-worker-prop">
            <cc:steps>
                <cc:eval id="set-standard-ws-props">
                    <cc:expression>props['web.service.version'] = intsys.getAttribute('Web Service Version')</cc:expression>
                    <cc:expression>props['web.service.count'] = intsys.getAttribute('Web Service Page Count')</cc:expression>
                    <cc:expression>props['web.service.add.only'] = intsys.getAttributeAsBoolean('Web Service Add Only', true)</cc:expression>
                    <cc:expression>props['web.service.include.reference'] = intsys.getAttributeAsBoolean('Web Service Include Reference',true)</cc:expression>
                    <cc:expression>props['web.service.auto.complete'] = intsys.getAttributeAsBoolean('Web Service Auto Complete',true)</cc:expression>
                    <cc:expression>props['web.service.include.descriptors'] = intsys.getAttributeAsBoolean('Web Service Include Descriptors',true)</cc:expression>
                    <cc:expression>props['web.service.request.log'] = intsys.getAttributeAsBoolean('Log Web Service Request XML',true)</cc:expression>
                    <cc:expression>props['web.service.response.log'] = intsys.getAttributeAsBoolean('Log Web Service Response XML',true)</cc:expression>
                    <cc:expression>props['web.service.submit'] = intsys.getAttributeAsBoolean('Web Service Submit',true)</cc:expression>
                    <cc:expression>props['web.service.effective.date'] = (props['web.service.effective.date'] == null) ? intsys.getAttribute('Web Service Effective Date'):props['web.service.effective.date']</cc:expression>
                    <cc:expression>props['web.service.lock.transaction'] = intsys.getAttributeAsBoolean('Web Service Lock Transaction',true)</cc:expression>
                    <cc:expression>props['default.business.process.comment'] = intsys.getAttribute('Default Business Process Comment')</cc:expression>
                    <cc:expression>props['web.service.summary.log'] = intsys.getAttributeAsBoolean('Log Summary Import Results',true)</cc:expression>
                    <cc:expression>props['web.service.include.attachments'] = intsys.getAttributeAsBoolean('Web Service Include Attachments',true)</cc:expression>
                    <cc:expression>props['web.service.changes.only'] = intsys.getAttributeAsBoolean('Web Service Changes Only',true)</cc:expression>
                    <cc:expression>props['web.service.configuration.log'] = intsys.getAttributeAsBoolean('Log Configuration Information',true)</cc:expression>
                    <cc:expression>props['current.environment'] = intsys.getAttribute('Current Environment')</cc:expression>
                </cc:eval>
            </cc:steps>
        </cc:async-mediation>
        <cc:local-out id="call_aggregateprocessingdetails" execute-when="props['web.service.summary.log'] == true" endpoint="vm://standard_logging/aggregate_processing_details">
            <cc:set name="summarylog.filename" value="'Summary_Log_Information'"/>
            <cc:set name="summarylog.file.extension" value="'html'"/>
            <cc:set name="record.count.total" value="props['record.count.total']"/>
            <cc:set name="record.counter" value="props['record.counter'] "/>
            <cc:set name="file.number.total" value="props['page.total']"/>
            <cc:set name="file.number.current" value="props['page.current']"/>
            <cc:set name="summary.log.file.extension" value="'html'"/>
            <cc:set name="continue.loop" value="'no'"/>
        </cc:local-out>
        <cc:async-mediation id="file-counters" routes-to="call_log_processing_msg_return_msg">
            <cc:steps>
                <cc:eval id="reset-file-counters">
                    <cc:expression>props['file.number.current'] = ((props['file.number.current'] == null)? 0:props['file.number.current']) + 1</cc:expression>
                    <cc:expression>props['file.record.counter'] = 0</cc:expression>
                    <cc:expression>props['file.record.counter.imported'] = 0</cc:expression>
                    <cc:expression>props['file.record.counter.failed'] = 0</cc:expression>
                    <cc:expression>props['file.record.counter.skipped'] = 0</cc:expression>
                    <cc:expression>props['aggregation-complete-flag'] = false</cc:expression>
                    <cc:expression>props['summary-transaction-created'] = false</cc:expression>
                </cc:eval>
            </cc:steps>
        </cc:async-mediation>
        <cc:async-mediation id="record-counters" routes-to="call_process_xml_data">
            <cc:steps>
                <cc:eval id="incr-counters">
                    <cc:expression>props['record.counter'] = ((props['record.counter'] == null)? 0:props['record.counter']) + 1</cc:expression>
                    <cc:expression>props['file.record.counter'] = ((props['file.record.counter'] == null)? 0:props['file.record.counter']) + 1</cc:expression>
                </cc:eval>
            </cc:steps>
        </cc:async-mediation>
        <cc:local-out id="call_parse_and_store_logging_info" endpoint="vm://standard_logging/parse_and_store_logging_info">
            <cc:set name="failurexmlsplit" value="'failed_records'"/>
            <cc:set name="logfilexmlsplit" value="'summaryloginfo'"/>
            <cc:set name="process.type" value="props['running.process']"/>
            <cc:set name="record.counter.failed" value="props['record.counter.failed']"/>
            <cc:set name="log.summarydata" value="props['web.service.summary.log']"/>
        </cc:local-out>
        <cc:local-out id="put_log_processing_stats" routes-response-to="return-msg" endpoint="vm://wcc/PutIntegrationMessage">
            <cc:set name="is.message.severity" value="'INFO'"/>
            <cc:set name="is.message.summary" value="'Record ' + (((props['record.counter'] == null)? 0:props['record.counter']) + 1) + ' of ' + props['record.count.total'] + ' for Page ' + props['page.current'] + ' of ' + props['page.total']"/>
            <cc:set name="is.message.storage.enabled" value="false"/>
        </cc:local-out>
        <cc:async-mediation id="set-process-properties" routes-to="set-attributes">
            <cc:steps>
                <cc:eval id="set-process-props-get">
                    <cc:expression>props['web.service.get.application'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:sub_process/fhc:application&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.request.filename'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:sub_process/fhc:filename&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.request.type'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:sub_process/fhc:sub_type&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.request.endpoint'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:sub_process/fhc:endpoint&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.create.ws.xml.filename'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:sub_process/fhc:sub_process[@fhc:subprocess_name = 'create_ws_xml']/fhc:filename&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.create.ws.xml.endpoint'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:sub_process/fhc:sub_process[@fhc:subprocess_name = 'create_ws_xml']/fhc:endpoint&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.convert.to.xml'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:sub_process/fhc:sub_process[@fhc:subprocess_name = 'convert_to_xml']/@fhc:execute_subprocess&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.convert.to.xml.delimiter'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:sub_process/fhc:sub_process[@fhc:subprocess_name = 'convert_to_xml']/fhc:delimiter&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.convert.to.xml.filename'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:sub_process/fhc:sub_process[@fhc:subprocess_name = 'convert_to_xml']/fhc:filename&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.conform.xml'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:sub_process/fhc:sub_process[@fhc:subprocess_name = 'conform_xml']/@fhc:execute_subprocess&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.conform.xml.filename'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:sub_process/fhc:sub_process[@fhc:subprocess_name = 'conform_xml']/fhc:filename&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.conform.xml.endpoint'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:sub_process/fhc:sub_process[@fhc:subprocess_name = 'conform_xml']/fhc:endpoint&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.lookup.wd.data'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:sub_process/fhc:sub_process[@fhc:subprocess_name = 'lookup_wd_data']/@fhc:execute_subprocess&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.lookup.wd.data.application'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:sub_process/fhc:sub_process[@fhc:subprocess_name = 'lookup_wd_data']/fhc:application&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.lookup.wd.data.request.type'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:sub_process/fhc:sub_process[@fhc:subprocess_name = 'lookup_wd_data']/fhc:sub_type&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.lookup.wd.data.filename'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:sub_process/fhc:sub_process[@fhc:subprocess_name = 'lookup_wd_data']/fhc:filename&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.lookup.wd.data.subroutine'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:sub_process/fhc:sub_process[@fhc:subprocess_name = 'lookup_wd_data']/fhc:endpoint&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.filter.multi.instance.1'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:filter_attributes/fhc:multi_instance_filters/fhc:filter_attribute[1]&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.filter.multi.instance.2'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:filter_attributes/fhc:multi_instance_filters/fhc:filter_attribute[2]&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.filter.multi.instance.3'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:filter_attributes/fhc:multi_instance_filters/fhc:filter_attribute[3]&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.filter.single.instance.1'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:filter_attributes/fhc:single_instance_filters/fhc:filter_attribute[1]&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.filter.single.instance.2'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:filter_attributes/fhc:single_instance_filters/fhc:filter_attribute[2]&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.filter.single.instance.3'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:filter_attributes/fhc:single_instance_filters/fhc:filter_attribute[3]&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.response.endpoint'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:sub_process/fhc:sub_process[@fhc:subprocess_name = 'start_put']/fhc:endpoint&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['xml.split.namespace'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:split_data/@fhc:namespace&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['xml.split.tag'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:split_data/fhc:tag&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['report.alias'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:sub_process/fhc:report_alias&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['retrieval.file.labels'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:filter_attributes/fhc:file_label&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                </cc:eval>
                <cc:eval id="set-process-props-put">
                    <cc:expression>props['web.service.put.application'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:sub_process/fhc:application&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.request.filename'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:sub_process/fhc:filename&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.request.endpoint'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:sub_process/fhc:endpoint&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.create.ws.xml.filename'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:sub_process/fhc:sub_process[@fhc:subprocess_name = 'create_ws_xml']/fhc:filename&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.create.ws.xml.subroutine'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:sub_process/fhc:sub_process[@fhc:subprocess_name = 'create_ws_xml']/fhc:endpoint&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.conform.xml'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:sub_process/fhc:sub_process[@fhc:subprocess_name = 'conform_xml']/@fhc:execute_subprocess&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.conform.xml.filename'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:sub_process/fhc:sub_process[@fhc:subprocess_name = 'conform_xml']/fhc:filename&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.conform.xml.endpoint'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:sub_process/fhc:sub_process[@fhc:subprocess_name = 'conform_xml']/fhc:endpoint&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.lookup.wd.data'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:sub_process/fhc:sub_process[@fhc:subprocess_name = 'lookup_wd_data']/@fhc:execute_subprocess&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.lookup.wd.data.application'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:sub_process/fhc:sub_process[@fhc:subprocess_name = 'lookup_wd_data']/fhc:application&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.lookup.wd.data.request.type'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:sub_process/fhc:sub_process[@fhc:subprocess_name = 'lookup_wd_data']/fhc:sub_type&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.lookup.wd.data.filename'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:sub_process/fhc:sub_process[@fhc:subprocess_name = 'lookup_wd_data']/fhc:filename&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.lookup.wd.data.subroutine'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:sub_process/fhc:sub_process[@fhc:subprocess_name = 'lookup_wd_data']/fhc:endpoint&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.update.multi.instance.1'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:update_attributes/fhc:multi_instance_updates/fhc:update_attribute[1]&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.update.multi.instance.2'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:update_attributes/fhc:multi_instance_updates/fhc:update_attribute[2]&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.update.multi.instance.3'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:update_attributes/fhc:multi_instance_updates/fhc:update_attribute[3]&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.update.single.instance.1'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:update_attributes/fhc:single_instance_updates/fhc:update_attribute[1]&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.update.single.instance.2'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:update_attributes/fhc:single_instance_updates/fhc:update_attribute[2]&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.update.single.instance.3'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:update_attributes/fhc:single_instance_updates/fhc:update_attribute[3]&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.update.data.attribute'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:update_attributes/fhc:update_data_attribute&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.xml.split.namespace'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:split_data/@fhc:namespace&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.xml.split.tag'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:split_data/fhc:tag&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.workday.id.tag'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:workday_transaction_id_data/fhc:tag&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.workday.id.namespace'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:workday_transaction_id_data/@fhc:namespace&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                </cc:eval>
                <cc:eval id="set-process-props-external-api-get">
                    <cc:expression>props['web.service.get.external.api.url.attribute'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:external_api_attributes/fhc:external_http/fhc:url_attribute&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.external.api.authentication.type'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:external_api_attributes/fhc:external_http/fhc:http_authentication/@fhc:property_type&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.external.api.authentication.refresh.token.attribute'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:external_api_attributes/fhc:external_http/fhc:http_authentication/fhc:refresh_token_attribute&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.external.api.authentication.username.attribute'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:external_api_attributes/fhc:external_http/fhc:http_authentication/fhc:username_attribute&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.external.api.authentication.password.attribute'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:external_api_attributes/fhc:external_http/fhc:http_authentication/fhc:password_attribute&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.external.api.http.rest.method'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:external_api_attributes/fhc:external_http/fhc:rest_method&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.external.api.http.content.type'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:external_api_attributes/fhc:external_http/fhc:content_type&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.external.api.http.user.agent'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:external_api_attributes/fhc:external_http/fhc:user_agent&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.external.api.version.attribute'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:external_api_attributes/fhc:api_version_attribute&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.external.api.set.headers'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:external_api_attributes/fhc:sub_process[@fhc:subprocess_name = 'set_headers']/@fhc:execute_subprocess&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.external.api.set.headers.filename'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:external_api_attributes/fhc:sub_process[@fhc:subprocess_name = 'set_headers']/fhc:filename&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.external.api.set.headers.subroutine'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:external_api_attributes/fhc:sub_process[@fhc:subprocess_name = 'set_headers']/fhc:endpoint&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.external.api.set.authorization.token'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:external_api_attributes/fhc:sub_process[@fhc:subprocess_name = 'set_authentication']/@fhc:execute_subprocess&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.external.api.set.authorization.token.subroutine'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:external_api_attributes/fhc:sub_process[@fhc:subprocess_name = 'set_authentication']/fhc:endpoint&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.external.api.set.url.extrapath'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:external_api_attributes/fhc:sub_process[@fhc:subprocess_name = 'set_url_extrapath']/@fhc:execute_subprocess&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.external.api.set.url.extrapath.subroutine'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:external_api_attributes/fhc:sub_process[@fhc:subprocess_name = 'set_url_extrapath']/fhc:endpoint&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.get.external.api.convert.response.json.to.xml'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:get_ws_attributes/fhc:external_api_attributes/fhc:convert_response_json_to_xml&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                </cc:eval>
                <cc:eval id="set-process-props-external-api-put">
                    <cc:expression>props['web.service.put.external.api.url.attribute'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:external_api_attributes/fhc:external_http/fhc:url_attribute&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.external.api.authentication.type'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:external_api_attributes/fhc:external_http/fhc:http_authentication/@fhc:property_type&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.external.api.authentication.refresh.token.attribute'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:external_api_attributes/fhc:external_http/fhc:http_authentication/fhc:refresh_token_attribute&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.external.api.http.rest.method'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:external_api_attributes/fhc:external_http/fhc:rest_method&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.external.api.http.content.type'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:external_api_attributes/fhc:external_http/fhc:content_type&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.external.api.http.user.agent'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:external_api_attributes/fhc:external_http/fhc:user_agent&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.external.api.version.attribute'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:external_api_attributes/fhc:api_version_attribute&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.external.api.set.headers'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:external_api_attributes/fhc:sub_process[@fhc:subprocess_name = 'set_headers']/@fhc:execute_subprocess&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.external.api.set.headers.filename'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:external_api_attributes/fhc:sub_process[@fhc:subprocess_name = 'set_headers']/fhc:filename&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.external.api.set.headers.subroutine'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:external_api_attributes/fhc:sub_process[@fhc:subprocess_name = 'set_headers']/fhc:endpoint&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.external.api.set.authorization.token'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:external_api_attributes/fhc:sub_process[@fhc:subprocess_name = 'set_authentication']/@fhc:execute_subprocess&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.external.api.set.authorization.token.subroutine'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:external_api_attributes/fhc:sub_process[@fhc:subprocess_name = 'set_authentication']/fhc:endpoint&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.external.api.set.url.extrapath'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:external_api_attributes/fhc:sub_process[@fhc:subprocess_name = 'set_url_extrapath']/@fhc:execute_subprocess&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.external.api.set.url.extrapath.subroutine'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:external_api_attributes/fhc:sub_process[@fhc:subprocess_name = 'set_url_extrapath']/fhc:endpoint&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['web.service.put.external.api.convert.response.json.to.xml'] = vars['config.properties'].xpath(&quot;//fhc:web_service_information/fhc:put_ws_attributes/fhc:external_api_attributes/fhc:convert_response_json_to_xml&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                </cc:eval>
            </cc:steps>
        </cc:async-mediation>
        <cc:async-mediation id="set-attributes" routes-to="call_log_configuration_html">
            <cc:steps>
                <cc:eval id="set-output-props">
                    <cc:expression>props['output.transform.xml.filename'] = vars['config.properties'].xpath(&quot;//fhc:output_information/fhc:filename&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['output.aggregation.data.type'] = vars['config.properties'].xpath(&quot;//fhc:output_information/@fhc:aggregation_data_type&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['output.file.delivery.service'] = vars['config.properties'].xpath(&quot;//fhc:output_information/fhc:output_file/@fhc:delivery_service&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['output.file.sequencer'] = vars['config.properties'].xpath(&quot;//fhc:output_information/fhc:output_file/fhc:sequencer&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                    <cc:expression>props['output.file.deliver.documents.attribute']= vars['config.properties'].xpath(&quot;//fhc:output_information/fhc:output_file/fhc:deliver_documents_attribute&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                </cc:eval>
                <cc:eval id="set-attribute-values">
                    <cc:expression>props['multi.instance.filter.1.wids'] = (props['web.service.get.filter.multi.instance.1'].length() == 0)? 'no': intsys.getAttributeReferenceDataList(props['web.service.get.filter.multi.instance.1'], 'WID').toString().replace(&quot;[&quot;,&quot;&quot;).replace(&quot;]&quot;,&quot;&quot;)</cc:expression>
                    <cc:expression>props['multi.instance.filter.2.wids'] = (props['web.service.get.filter.multi.instance.2'].length() == 0)? 'no': intsys.getAttributeReferenceDataList(props['web.service.get.filter.multi.instance.2'], 'WID').toString().replace(&quot;[&quot;,&quot;&quot;).replace(&quot;]&quot;,&quot;&quot;)</cc:expression>
                    <cc:expression>props['multi.instance.filter.3.wids'] = (props['web.service.get.filter.multi.instance.3'].length() == 0)? 'no': intsys.getAttributeReferenceDataList(props['web.service.get.filter.multi.instance.3'], 'WID').toString().replace(&quot;[&quot;,&quot;&quot;).replace(&quot;]&quot;,&quot;&quot;)</cc:expression>
                    <cc:expression>props['single.instance.filter.1.wids'] = (props['web.service.get.filter.single.instance.1'].length() == 0)? 'no': intsys.getAttributeReferenceData(props['web.service.get.filter.single.instance.1'], 'WID')</cc:expression>
                    <cc:expression>props['single.instance.filter.2.wids'] = (props['web.service.get.filter.single.instance.2'].length() == 0)? 'no': intsys.getAttributeReferenceData(props['web.service.get.filter.single.instance.2'], 'WID')</cc:expression>
                    <cc:expression>props['single.instance.filter.3.wids'] = (props['web.service.get.filter.single.instance.3'].length() == 0)? 'no': intsys.getAttributeReferenceData(props['web.service.get.filter.single.instance.3'], 'WID')</cc:expression>
                    <cc:expression>props['single.instance.filter.1.name'] = (props['web.service.get.filter.single.instance.1'].length() == 0)? 'no': intsys.getAttribute(props['web.service.get.filter.single.instance.1'])</cc:expression>
                    <cc:expression>props['single.instance.filter.2.name'] = (props['web.service.get.filter.single.instance.2'].length() == 0)? 'no': intsys.getAttribute(props['web.service.get.filter.single.instance.2'])</cc:expression>
                    <cc:expression>props['single.instance.filter.3.name'] = (props['web.service.get.filter.single.instance.3'].length() == 0)? 'no': intsys.getAttribute(props['web.service.get.filter.single.instance.3'])</cc:expression>
                    <cc:expression>props['multi.instance.update.1.wids'] = (props['web.service.put.update.multi.instance.1'].length() == 0)? 'no': intsys.getAttributeReferenceDataList(props['web.service.put.update.multi.instance.1'], 'WID').toString().replace(&quot;[&quot;,&quot;&quot;).replace(&quot;]&quot;,&quot;&quot;)</cc:expression>
                    <cc:expression>props['multi.instance.update.2.wids'] = (props['web.service.put.update.multi.instance.2'].length() == 0)? 'no': intsys.getAttributeReferenceDataList(props['web.service.put.update.multi.instance.2'], 'WID').toString().replace(&quot;[&quot;,&quot;&quot;).replace(&quot;]&quot;,&quot;&quot;)</cc:expression>
                    <cc:expression>props['multi.instance.update.3.wids'] = (props['web.service.put.update.multi.instance.3'].length() == 0)? 'no': intsys.getAttributeReferenceDataList(props['web.service.put.update.multi.instance.3'], 'WID').toString().replace(&quot;[&quot;,&quot;&quot;).replace(&quot;]&quot;,&quot;&quot;)</cc:expression>
                    <cc:expression>props['single.instance.update.1.wids'] = (props['web.service.put.update.single.instance.1'].length() == 0)? 'no': intsys.getAttributeReferenceData(props['web.service.put.update.single.instance.1'], 'WID')</cc:expression>
                    <cc:expression>props['single.instance.update.2.wids'] = (props['web.service.put.update.single.instance.2'].length() == 0)? 'no': intsys.getAttributeReferenceData(props['web.service.put.update.single.instance.2'], 'WID')</cc:expression>
                    <cc:expression>props['single.instance.update.3.wids'] = (props['web.service.put.update.single.instance.3'].length() == 0)? 'no': intsys.getAttributeReferenceData(props['web.service.put.update.single.instance.3'], 'WID')</cc:expression>
                    <cc:expression>props['single.instance.update.1.name'] = (props['web.service.put.update.single.instance.1'].length() == 0)? 'no': intsys.getAttribute(props['web.service.put.update.single.instance.1'])</cc:expression>
                    <cc:expression>props['single.instance.update.2.name'] = (props['web.service.put.update.single.instance.2'].length() == 0)? 'no': intsys.getAttribute(props['web.service.put.update.single.instance.2'])</cc:expression>
                    <cc:expression>props['single.instance.update.3.name'] = (props['web.service.put.update.single.instance.3'].length() == 0)? 'no': intsys.getAttribute(props['web.service.put.update.single.instance.3'])</cc:expression>
                    <cc:expression>props['update.data'] = intsys.getAttributeAsBoolean(props['web.service.put.update.data.attribute'], true)</cc:expression>
                    <cc:expression>props['deliver.documents'] = intsys.getAttribute(props['output.file.deliver.documents.attribute'])</cc:expression>
                    <cc:expression>props['web.service.put.external.api.url']  = intsys.getAttribute(props['web.service.put.external.api.url.attribute'])</cc:expression>
                    <cc:expression>props['web.service.put.external.api.version'] = intsys.getAttribute(props['web.service.put.external.api.version.attribute'])</cc:expression>
                    <cc:expression>props['web.service.get.external.api.url']  = intsys.getAttribute(props['web.service.get.external.api.url.attribute'])</cc:expression>
                    <cc:expression>props['web.service.get.external.api.version'] = intsys.getAttribute(props['web.service.get.external.api.version.attribute'])</cc:expression>
                </cc:eval>
                <cc:xslt id="set-report-filter" output="variable" output-variable="report.filter.xml" input="variable" input-variable="config.properties" url="lib/processing/set_report_filter_details.xsl"/>
                <cc:eval id="set-report-props">
                    <cc:expression>props['report.extra.path'] = (props['report.alias'].length() == 0)? 'no': intsys.reportService.getExtrapath(props['report.alias'])</cc:expression>
                    <cc:expression>props['report.filter'] = vars['report.filter.xml'].xpath(&quot;//fhc:report_filter&quot;, &quot;fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd&quot;)</cc:expression>
                </cc:eval>
            </cc:steps>
        </cc:async-mediation>
        <cc:async-mediation id="set-worker-prop" routes-to="put_running_proc_msg" execute-steps-when="props['set.get.worker.properties'] == 'true'">
            <cc:steps>
                <cc:eval id="set-props-get-workers">
                    <cc:expression>props['exclude.companies'] = intsys.getAttribute('Exclude Company')</cc:expression>
                    <cc:expression>props['exclude.company.hierarchies'] = intsys.getAttribute('Exclude Company Hierarchies')</cc:expression>
                    <cc:expression>props['exclude.contingent.workers'] = intsys.getAttribute('Exclude Contingent Workers')</cc:expression>
                    <cc:expression>props['exclude.cost.center.hierarchies'] = intsys.getAttribute('Exclude Cost Center Hierarchies')</cc:expression>
                    <cc:expression>props['exclude.cost.centers'] = intsys.getAttribute('Exclude Cost Centers')</cc:expression>
                    <cc:expression>props['exclude.custom.organizations'] = intsys.getAttribute('Exclude Custom Organizations')</cc:expression>
                    <cc:expression>props['exclude.employees'] = intsys.getAttribute('Exclude Employees')</cc:expression>
                    <cc:expression>props['exclude.inactive.workers'] = intsys.getAttribute('Exclude Inactive Workers')</cc:expression>
                    <cc:expression>props['exclude.location.hierarchies'] = intsys.getAttribute('Exclude Location Hierarchies')</cc:expression>
                    <cc:expression>props['exclude.matrix.organizations'] = intsys.getAttribute('Exclude Matrix Organizations')</cc:expression>
                    <cc:expression>props['exclude.organization.support.role.data'] = intsys.getAttribute('Exclude Organization Support Role Data')</cc:expression>
                    <cc:expression>props['exclude.pay.groups'] = intsys.getAttribute('Exclude Pay Groups')</cc:expression>
                    <cc:expression>props['exclude.region.hierarchies'] = intsys.getAttribute('Exclude Region Hierarchies')</cc:expression>
                    <cc:expression>props['exclude.regions'] = intsys.getAttribute('Exclude Regions')</cc:expression>
                    <cc:expression>props['exclude.supervisory.organizations'] = intsys.getAttribute('Exclude Supervisory Organizations')</cc:expression>
                    <cc:expression>props['exclude.teams'] = intsys.getAttribute('Exclude Teams')</cc:expression>
                    <cc:expression>props['include.account.provisioning'] = intsys.getAttribute('Include Account Provisioning')</cc:expression>
                    <cc:expression>props['include.benefit.eligibility'] = intsys.getAttribute('Include Benefit Eligibility')</cc:expression>
                    <cc:expression>props['include.benefit.enrollments'] = intsys.getAttribute('Include Benefit Enrollments')</cc:expression>
                    <cc:expression>props['include.career'] = intsys.getAttribute('Include Career')</cc:expression>
                    <cc:expression>props['include.compensation'] = intsys.getAttribute('Include Compensation')</cc:expression>
                    <cc:expression>props['include.employee.contract.data'] = intsys.getAttribute('Include Employee Contract Data')</cc:expression>
                    <cc:expression>props['include.employee.review'] = intsys.getAttribute('Include Employee Review')</cc:expression>
                    <cc:expression>props['include.employment.information'] = intsys.getAttribute('Include Employment Information')</cc:expression>
                    <cc:expression>props['include.feedback.received'] = intsys.getAttribute('Include Feedback Received')</cc:expression>
                    <cc:expression>props['include.goals'] = intsys.getAttribute('Include Goals')</cc:expression>
                    <cc:expression>props['include.management.chain.data'] = intsys.getAttribute('Include Management Chain Data')</cc:expression>
                    <cc:expression>props['include.organizations'] = intsys.getAttribute('Include Organizations')</cc:expression>
                    <cc:expression>props['include.personal.information'] = intsys.getAttribute('Include Personal Information')</cc:expression>
                    <cc:expression>props['include.photo'] = intsys.getAttribute('Include Photo')</cc:expression>
                    <cc:expression>props['include.qualifications'] = intsys.getAttribute('Include Qualifications')</cc:expression>
                    <cc:expression>props['include.related.persons'] = intsys.getAttribute('Include Related Persons')</cc:expression>
                    <cc:expression>props['include.roles'] = intsys.getAttribute('Include Roles')</cc:expression>
                    <cc:expression>props['include.succession.profile'] = intsys.getAttribute('Include Succession Profile')</cc:expression>
                    <cc:expression>props['include.talent.assessment'] = intsys.getAttribute('Include Talent Assessment')</cc:expression>
                    <cc:expression>props['include.transaction.log.data'] = intsys.getAttribute('Include Transaction Log Data')</cc:expression>
                    <cc:expression>props['include.user.account'] = intsys.getAttribute('Include User Account')</cc:expression>
                    <cc:expression>props['include.worker.documents'] = intsys.getAttribute('Include Worker Documents')</cc:expression>
                </cc:eval>
            </cc:steps>
        </cc:async-mediation>
        <cc:async-mediation id="validate_config_file" routes-to="set-ws-props">
            <cc:steps>
                <cc:xslt id="get-properties" output="variable" output-variable="config.properties" input="variable" input-variable="config-xml" url="lib/processing/set_configuration_properties.xsl"/>
                <cc:validate id="Validate" input="variable" input-variable="config.properties" failure-message="'Configuration File is not valid'" namespaces="fhc https://github.com/firehawk-consulting/firehawk/schemas/configuration_file_sync_data.xsd" schema="lib/config_files/configuration_file_sync_data.xsd" xpath="//fhc:processes"/>
            </cc:steps>
            <cc:send-error id="SendError" rethrow-error="true" routes-to="call_failed_validation"/>
        </cc:async-mediation>
        <cc:local-out id="call_failed_validation" endpoint="vm://wcc/PutIntegrationMessage">
            <cc:set name="is.message.severity" value="'CRITICAL'"/>
            <cc:set name="is.message.summary" value="'Configuration File Failed Validation'"/>
            <cc:set name="is.message.detail" value="context.errorMessage"/>
        </cc:local-out>
        <cc:local-in id="set-props-attributes" routes-to="get_set_properties"/>
        <cc:local-out id="call_set-props-attributes" routes-response-to="call_get_request_endpoint" endpoint="vm://standard_configuration_properties/set-props-attributes"/>
        <cc:local-in id="log_configuration_html" routes-to="cr_html_file"/>
        <cc:async-mediation id="cr_html_file" routes-to="call_store_msg_for_output_file">
            <cc:steps>
                <cc:xslt id="create_config_html" output="variable" output-variable="output.data" input="variable" input-variable="config.properties" url="lib/processing/create_configuration_html_output.xsl"/>
            </cc:steps>
        </cc:async-mediation>
        <cc:local-out id="call_log_configuration_html" execute-when="props['web.service.configuration.log']" endpoint="vm://standard_configuration_properties/log_configuration_html"/>
        <cc:local-out id="call_store_msg_for_output_file" endpoint="vm://standard_logging/store_msg_for_output_file">
            <cc:set name="output.filename" value="props['running.process'].replace(' ','_') + '_Configuration.html'"/>
        </cc:local-out>
        <cc:local-out id="call_render-processing-stats" endpoint="vm://standard_logging/render-processing-stats">
            <cc:set name="currentfile-name" value="'For Page ' + props['page.current'] + ' of ' + props['page.total']"/>
            <cc:set name="record-totalcount" value="props['record.count.total']"/>
            <cc:set name="record-filecount" value="props['record.counter']"/>
        </cc:local-out>
        <cc:async-mediation id="return-msg">
            <cc:steps>
                <cc:copy id="cp-back-to-msg" input="variable" input-variable="input.msg"/>
            </cc:steps>
        </cc:async-mediation>
        <cc:async-mediation id="store-file" routes-to="put_log_processing_stats">
            <cc:steps>
                <cc:copy id="cp-msg" output="variable" output-variable="input.msg"/>
                <cc:write id="write-blankxml">
                    <cc:message>
                        <cc:text>&lt;blankxml/></cc:text>
                    </cc:message>
                </cc:write>
            </cc:steps>
        </cc:async-mediation>
        <cc:local-in id="log_processing_msg_return_msg" routes-to="store-file" access="public" icon="local-in-log_processing_msg_return_msg.png" tooltip="Sub Routine Used to Log and Processing Message and reset to existing (input) message.">
            
        </cc:local-in>
        <cc:local-out id="call_log_processing_msg_return_msg" routes-response-to="split_response" endpoint="vm://standard_configuration_properties/log_processing_msg_return_msg">
            <cc:set name="store.filename" value="'Logging_Output.txt'"/>
        </cc:local-out>
    </cc:assembly>

</beans>